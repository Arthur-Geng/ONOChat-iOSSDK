syntax = "proto3";
option java_package = "chat.ono.chatsdk.proto";
option java_outer_classname = "MessageProtos";

//有推送 用户信息
message UserData {
  string uid = 1;
  string name = 2;
  string avatar = 3;
  int32 gender = 4; //用户性别，0表示未知，1表示男，2女表示女，其它会报参数错误
  string ex = 5; //用户名片扩展字段，最大长度1024字符，用户可自行扩展，建议封装成JSON字符串
}

message Message {
  string mid = 1;
  int32 type = 2; 
  string from = 3;
  string to = 4;
  string data = 5; 
  double time = 6;
  UserData user = 7;
}

message Friend {
  string uid = 1;
  string remark = 2;
}

message ErrorResponse {
  int32 code = 1;
  string message = 2;
  string extra = 3;
}

//推送 重复登录被提出
message UserKick {
  string content = 1;
}
//推送 新的好友
message NewFriend {
  UserData user = 1;
  int64 friendsUpdateTime = 2;
}
//推送 新的好友请求
message NewFriendRequest {
  UserData user = 1;
  string greeting = 2;//招呼内容
}

message FriendOperations {
  repeated UserData adds = 1;
  repeated UserData updates = 2;
  repeated string deletes = 3;
  int64 friendsUpdateTime = 4;
}

//请求 登陆接口
message UserLoginRequest {
  string token = 1;
  int64 friendsUpdateTime = 2;
}

//响应 登陆
message UserLoginResponse {
  UserData user = 1;
  repeated Message messages = 2;
  FriendOperations friendOperations = 3;
}

message UserProfileRequest {
  string uid = 1;
}
message UserProfileResponse {
  UserData user = 1;
}

message UserProfilesRequest {
  repeated string uids = 1;
}
message UserProfilesResponse {
  repeated UserData users = 1;
}

//请求 标记消息已读
message ReadMessageRequest {
  string mid = 1;
}
//请求 发送消息
message SendMessageRequest {
  int32 type = 1; //1文字 2图片 3表情
  string to = 2; //接收者id
  string data = 3;
  string mid = 4;
}
//响应 发送消息
message SendMessagenResponse {
  string omid = 1;
  string nmid = 2;
}

//请求 好友列表
message FriendUpdatesRequest {
  int64 friendsUpdateTime = 1;
}
//响应 好友列表
message FriendUpdatesResponse {
  FriendOperations friendOperations = 1;
}

//请求 发起好友请求
message FriendRequestRequest {
  string uid = 1;
  string greeting = 2; //招呼内容
}

//请求 好友请求列表
message FriendRequestListRequest {
  int32 limit = 1; //条数
  string offset = 2; //分页之前的最一条的createdAt
}
//响应 好友请求列表
message FriendRequestListResponse {
  repeated NewFriendRequest requestList = 1;
}

//请求 同意好友请求
message FriendAgreeRequest {
  string uid = 1;
}

//响应 同意好友请求
message FriendAgreeResponse {
  int64 friendsUpdateTime = 1;
}

//请求 忽略好友请求
message FriendIgnoreRequest {
  string uid = 1;
}

//请求 删除好友请求
message FriendDeleteRequest {
  string uid = 1;
}

//响应 删除好友请求
message FriendDeleteResponse {
  int64 friendsUpdateTime = 1;
}

//请求 好友模糊查找
message FriendSearchRequest {
  string keyword = 1; //关键字
}
//响应 好友模糊查找
message FriendSearchResponse {
  repeated UserData users = 1;
}

//请求 好友备注
message FriendRemarkRequest {
  string uid = 1;
  string remark = 2;
}